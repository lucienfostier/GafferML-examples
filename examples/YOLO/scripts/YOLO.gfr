import Gaffer
import GafferImage
import GafferML
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 5, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Backdrop14"] = Gaffer.Backdrop( "Backdrop14" )
parent.addChild( __children["Backdrop14"] )
__children["Backdrop14"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop14"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"] = Gaffer.Box( "YOLO" )
parent.addChild( __children["YOLO"] )
__children["YOLO"].addChild( GafferML.ImageToTensor( "ImageToTensor10" ) )
__children["YOLO"]["ImageToTensor10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferImage.ColorSpace( "ColorSpace11" ) )
__children["YOLO"]["ColorSpace11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferImage.Resize( "Resize21" ) )
__children["YOLO"]["Resize21"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferML.Inference( "Inference16" ) )
__children["YOLO"]["Inference16"]["in"].resize( 1 )
__children["YOLO"]["Inference16"]["out"].resize( 1 )
__children["YOLO"]["Inference16"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.Box( "BoxOverlay" ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["YOLO"]["BoxOverlay"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["YOLO"]["BoxOverlay"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.ImagePlug( "img", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["YOLO"]["BoxOverlay"]["BoxIn1"].setup( GafferML.TensorPlug( "out", defaultValue = GafferML.Tensor(), ) )
__children["YOLO"]["BoxOverlay"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferML.TensorPlug( "tensor", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["YOLO"]["BoxOverlay"]["BoxIn2"].setup( GafferImage.ImagePlug( "out", ) )
__children["YOLO"]["BoxOverlay"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.ImagePlug( "bg", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.Rectangle( "Rectangle" ) )
__children["YOLO"]["BoxOverlay"]["Rectangle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Loop( "Loop" ) )
__children["YOLO"]["BoxOverlay"]["Loop"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["BoxOverlay"]["Loop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.Merge( "Merge" ) )
__children["YOLO"]["BoxOverlay"]["Merge"]["in"].resize( 3 )
__children["YOLO"]["BoxOverlay"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Expression( "Expression6" ) )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__in"].addChild( GafferML.TensorPlug( "p0", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 10, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Expression( "Expression7" ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"].addChild( Gaffer.Color3fPlug( "p0", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p1", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p2", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"].addChild( GafferML.TensorPlug( "p3", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__out"].addChild( Gaffer.Box2fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 100, 100 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__out"].addChild( Gaffer.Color4fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.Merge( "Merge1" ) )
__children["YOLO"]["BoxOverlay"]["Merge1"]["in"].resize( 3 )
__children["YOLO"]["BoxOverlay"]["Merge1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.DeleteChannels( "DeleteChannels" ) )
__children["YOLO"]["BoxOverlay"]["DeleteChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["YOLO"]["BoxOverlay"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["BoxOverlay"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.Text( "Text" ) )
__children["YOLO"]["BoxOverlay"]["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Expression( "Expression" ) )
__children["YOLO"]["BoxOverlay"]["Expression"]["__in"].addChild( Gaffer.Color3fPlug( "p0", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression"]["__in"].addChild( GafferML.TensorPlug( "p1", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression"]["__out"].addChild( Gaffer.Color4fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color4f( 1, 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Expression( "Expression8" ) )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__in"].addChild( Gaffer.Box2fPlug( "p0", defaultValue = imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 100, 100 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 50, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__out"].addChild( Gaffer.Box2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"]["Expression8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( GafferImage.Crop( "Crop" ) )
__children["YOLO"]["BoxOverlay"]["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Dot( "Dot" ) )
__children["YOLO"]["BoxOverlay"]["Dot"].setup( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["YOLO"]["BoxOverlay"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Dot( "Dot1" ) )
__children["YOLO"]["BoxOverlay"]["Dot1"].setup( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["YOLO"]["BoxOverlay"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Dot( "Dot2" ) )
__children["YOLO"]["BoxOverlay"]["Dot2"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["BoxOverlay"]["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.IntPlug( "size_x", defaultValue = 50, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.IntPlug( "seed", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.Random( "Random" ) )
__children["YOLO"]["BoxOverlay"]["Random"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.FloatPlug( "lineWidth", defaultValue = 4.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.V2fPlug( "shadowOffset", defaultValue = imath.V2f( 5, -5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["BoxOverlay"].addChild( Gaffer.FloatPlug( "shadowBlur", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.Box( "FilterBoxes" ) )
__children["YOLO"]["FilterBoxes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["YOLO"]["FilterBoxes"]["BoxIn1"].setup( GafferML.TensorPlug( "out", defaultValue = GafferML.Tensor(), ) )
__children["YOLO"]["FilterBoxes"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( GafferML.TensorPlug( "boxes_in", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( Gaffer.BoxOut( "boxes2" ) )
__children["YOLO"]["FilterBoxes"]["boxes2"].setup( GafferML.TensorPlug( "in", defaultValue = GafferML.Tensor(), ) )
__children["YOLO"]["FilterBoxes"]["boxes2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( GafferML.TensorPlug( "boxes_out", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( Gaffer.Expression( "Expression" ) )
__children["YOLO"]["FilterBoxes"]["Expression"]["__in"].addChild( GafferML.TensorPlug( "p0", defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"]["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"]["Expression"]["__out"].addChild( GafferML.TensorPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferML.Tensor(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"]["FilterBoxes"].addChild( Gaffer.FloatPlug( "box_threshold", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferImage.ImagePlug( "image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["YOLO"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["YOLO"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.FloatPlug( "box_threshold", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["YOLO"]["BoxIn1"].setup( Gaffer.IntPlug( "out", defaultValue = 50, minValue = 0, ) )
__children["YOLO"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.IntPlug( "size", defaultValue = 50, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.IntPlug( "seed", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.FloatPlug( "lineWidth", defaultValue = 4.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.V2fPlug( "shadowOffset", defaultValue = imath.V2f( 5, -5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.FloatPlug( "shadowBlur", defaultValue = 0.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.Dot( "Dot7" ) )
__children["YOLO"]["Dot7"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["Dot7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.Dot( "Dot8" ) )
__children["YOLO"]["Dot8"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["Dot8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["YOLO"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["YOLO"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO"].addChild( GafferImage.Crop( "Crop" ) )
__children["YOLO"]["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["YOLO_tool"] = Gaffer.Reference( "YOLO_tool" )
parent.addChild( __children["YOLO_tool"] )
__children["YOLO_tool"].load( "/home/lucienf/gaffer/projects/default/references/YOLO.grf" )
__children["YOLO_tool"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 33.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 42381 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["Backdrop14"], 'nodeGadget:color', imath.Color3f( 0.310000002, 0.395000011, -0.0600000024 ) )
__children["Backdrop14"]["title"].setValue( 'YOLO' )
__children["Backdrop14"]["__uiPosition"].setValue( imath.V2f( -21.8920403, 19.8160248 ) )
__children["Backdrop14"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10.2518311, -1.24945068 ), imath.V2f( 62.1053429, 35.525631 ) ) )
Gaffer.Metadata.registerValue( __children["YOLO"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["YOLO"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["YOLO"]["user"], 'layout:section', 'User' )
__children["YOLO"]["ImageToTensor10"]["image"].setInput( __children["YOLO"]["ColorSpace11"]["out"] )
__children["YOLO"]["ImageToTensor10"]["channels"].setValue( IECore.StringVectorData( [ 'B', 'G', 'R' ] ) )
__children["YOLO"]["ImageToTensor10"]["__uiPosition"].setValue( imath.V2f( -9.07890224, -3.63943863 ) )
__children["YOLO"]["ColorSpace11"]["in"].setInput( __children["YOLO"]["Crop"]["out"] )
__children["YOLO"]["ColorSpace11"]["outputSpace"].setValue( 'sRGB - Texture' )
__children["YOLO"]["ColorSpace11"]["__uiPosition"].setValue( imath.V2f( -9.07890224, 6.52462387 ) )
__children["YOLO"]["Resize21"]["in"].setInput( __children["YOLO"]["BoxIn"]["out"] )
__children["YOLO"]["Resize21"]["format"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
__children["YOLO"]["Resize21"]["format"]["displayWindow"]["max"]["x"].setValue( 640 )
Gaffer.Metadata.registerValue( __children["YOLO"]["Resize21"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["YOLO"]["Resize21"]["format"]["displayWindow"]["max"]["y"].setInput( __children["YOLO"]["Resize21"]["format"]["displayWindow"]["max"]["x"] )
__children["YOLO"]["Resize21"]["fitMode"].setValue( 4 )
__children["YOLO"]["Resize21"]["__uiPosition"].setValue( imath.V2f( -9.07890224, 19.1886883 ) )
__children["YOLO"]["Inference16"]["model"].setValue( 'yolo.onnx' )
__children["YOLO"]["Inference16"]["in"][0].setInput( __children["YOLO"]["ImageToTensor10"]["tensor"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["Inference16"]["in"][0], 'label', 'images' )
Gaffer.Metadata.registerValue( __children["YOLO"]["Inference16"]["in"][0], 'noduleLayout:label', 'images' )
Gaffer.Metadata.registerValue( __children["YOLO"]["Inference16"]["out"][0], 'label', 'output' )
Gaffer.Metadata.registerValue( __children["YOLO"]["Inference16"]["out"][0], 'noduleLayout:label', 'output' )
__children["YOLO"]["Inference16"]["__uiPosition"].setValue( imath.V2f( -9.07890224, -9.30350113 ) )
__children["YOLO"]["BoxOverlay"]["__uiPosition"].setValue( imath.V2f( 6.75174427, -32.2995911 ) )
__children["YOLO"]["BoxOverlay"]["BoxIn"]["name"].setValue( 'img' )
__children["YOLO"]["BoxOverlay"]["BoxIn"]["__in"].setInput( __children["YOLO"]["BoxOverlay"]["img"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn"]["__in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -41.9379921, 5.50000191 ) )
__children["YOLO"]["BoxOverlay"]["img"].setInput( __children["YOLO"]["Dot7"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["img"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["img"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["img"], 'noduleLayout:section', 'top' )
__children["YOLO"]["BoxOverlay"]["BoxIn1"]["name"].setValue( 'tensor' )
__children["YOLO"]["BoxOverlay"]["BoxIn1"]["__in"].setInput( __children["YOLO"]["BoxOverlay"]["tensor"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn1"]["__in"], 'label', 'output' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn1"]["__in"], 'noduleLayout:label', 'output' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn1"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -33.8145027, 5.50000191 ) )
__children["YOLO"]["BoxOverlay"]["tensor"].setInput( __children["YOLO"]["FilterBoxes"]["boxes_out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["tensor"], 'label', 'output' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["tensor"], 'noduleLayout:label', 'output' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["tensor"], 'noduleLayout:section', 'top' )
__children["YOLO"]["BoxOverlay"]["BoxIn2"]["name"].setValue( 'bg' )
__children["YOLO"]["BoxOverlay"]["BoxIn2"]["__in"].setInput( __children["YOLO"]["BoxOverlay"]["bg"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn2"]["__in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn2"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxIn2"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -25.3474998, 5.50000191 ) )
__children["YOLO"]["BoxOverlay"]["bg"].setInput( __children["YOLO"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["bg"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["bg"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["bg"], 'noduleLayout:section', 'top' )
__children["YOLO"]["BoxOverlay"]["Rectangle"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["DeleteChannels"]["out"] )
__children["YOLO"]["BoxOverlay"]["Rectangle"]["color"].setInput( __children["YOLO"]["BoxOverlay"]["Expression7"]["__out"]["p1"] )
__children["YOLO"]["BoxOverlay"]["Rectangle"]["area"].setInput( __children["YOLO"]["BoxOverlay"]["Expression7"]["__out"]["p0"] )
__children["YOLO"]["BoxOverlay"]["Rectangle"]["lineWidth"].setInput( __children["YOLO"]["BoxOverlay"]["lineWidth"] )
__children["YOLO"]["BoxOverlay"]["Rectangle"]["__uiPosition"].setValue( imath.V2f( 25.3707027, -11.4630051 ) )
__children["YOLO"]["BoxOverlay"]["Loop"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["DeleteChannels"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Loop"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Loop"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["Loop"]["next"].setInput( __children["YOLO"]["BoxOverlay"]["Merge"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Loop"]["next"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Loop"]["previous"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["Loop"]["iterations"].setInput( __children["YOLO"]["BoxOverlay"]["Expression6"]["__out"]["p0"] )
__children["YOLO"]["BoxOverlay"]["Loop"]["__uiPosition"].setValue( imath.V2f( -1.11998177, -39.1192551 ) )
__children["YOLO"]["BoxOverlay"]["Merge"]["in"][0].setInput( __children["YOLO"]["BoxOverlay"]["Dot1"]["out"] )
__children["YOLO"]["BoxOverlay"]["Merge"]["in"][1].setInput( __children["YOLO"]["BoxOverlay"]["Crop"]["out"] )
__children["YOLO"]["BoxOverlay"]["Merge"]["operation"].setValue( 8 )
__children["YOLO"]["BoxOverlay"]["Merge"]["__uiPosition"].setValue( imath.V2f( 25.3707027, -30.9551926 ) )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__in"]["p0"].setInput( __children["YOLO"]["BoxOverlay"]["tensor"] )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__uiPosition"].setValue( imath.V2f( -12.83708, -38.6043892 ) )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"]["p0"].setInput( __children["YOLO"]["BoxOverlay"]["Random"]["outColor"] )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"]["p1"].setInput( __children["YOLO"]["BoxOverlay"]["bg"]["format"] )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"]["p2"].setInput( __children["YOLO"]["BoxOverlay"]["img"]["format"] )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__in"]["p3"].setInput( __children["YOLO"]["BoxOverlay"]["tensor"] )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__uiPosition"].setValue( imath.V2f( 9.94820881, -9.91075325 ) )
__children["YOLO"]["BoxOverlay"]["Merge1"]["in"][0].setInput( __children["YOLO"]["BoxOverlay"]["Dot2"]["out"] )
__children["YOLO"]["BoxOverlay"]["Merge1"]["in"][1].setInput( __children["YOLO"]["BoxOverlay"]["Loop"]["out"] )
__children["YOLO"]["BoxOverlay"]["Merge1"]["operation"].setValue( 8 )
__children["YOLO"]["BoxOverlay"]["Merge1"]["__uiPosition"].setValue( imath.V2f( -2.61998177, -47.2833176 ) )
__children["YOLO"]["BoxOverlay"]["DeleteChannels"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["BoxIn2"]["out"] )
__children["YOLO"]["BoxOverlay"]["DeleteChannels"]["channels"].setValue( '*' )
__children["YOLO"]["BoxOverlay"]["DeleteChannels"]["__uiPosition"].setValue( imath.V2f( -2.61998177, -2.83202934 ) )
__children["YOLO"]["BoxOverlay"]["BoxOut"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["Merge1"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["YOLO"]["BoxOverlay"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -1.11930418, -55.6153488 ) )
__children["YOLO"]["BoxOverlay"]["out"].setInput( __children["YOLO"]["BoxOverlay"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["YOLO"]["BoxOverlay"]["Text"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["Rectangle"]["out"] )
__children["YOLO"]["BoxOverlay"]["Text"]["color"].setInput( __children["YOLO"]["BoxOverlay"]["Expression"]["__out"]["p0"] )
__children["YOLO"]["BoxOverlay"]["Text"]["shadow"].setValue( True )
__children["YOLO"]["BoxOverlay"]["Text"]["shadowOffset"].setInput( __children["YOLO"]["BoxOverlay"]["shadowOffset"] )
__children["YOLO"]["BoxOverlay"]["Text"]["shadowBlur"].setInput( __children["YOLO"]["BoxOverlay"]["shadowBlur"] )
__children["YOLO"]["BoxOverlay"]["Text"]["text"].setInput( __children["YOLO"]["BoxOverlay"]["Expression"]["__out"]["p1"] )
__children["YOLO"]["BoxOverlay"]["Text"]["size"]["x"].setInput( __children["YOLO"]["BoxOverlay"]["size_x"] )
__children["YOLO"]["BoxOverlay"]["Text"]["size"]["y"].setInput( __children["YOLO"]["BoxOverlay"]["Text"]["size"]["x"] )
__children["YOLO"]["BoxOverlay"]["Text"]["area"].setInput( __children["YOLO"]["BoxOverlay"]["Expression8"]["__out"]["p0"] )
__children["YOLO"]["BoxOverlay"]["Text"]["__uiPosition"].setValue( imath.V2f( 25.3707027, -17.1270676 ) )
__children["YOLO"]["BoxOverlay"]["Expression"]["__in"]["p0"].setInput( __children["YOLO"]["BoxOverlay"]["Random"]["outColor"] )
__children["YOLO"]["BoxOverlay"]["Expression"]["__in"]["p1"].setInput( __children["YOLO"]["BoxOverlay"]["tensor"] )
__children["YOLO"]["BoxOverlay"]["Expression"]["__uiPosition"].setValue( imath.V2f( 14.6633167, -17.7545452 ) )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__in"]["p0"].setInput( __children["YOLO"]["BoxOverlay"]["Rectangle"]["area"] )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__in"]["p1"].setInput( __children["YOLO"]["BoxOverlay"]["Text"]["size"]["y"] )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__uiPosition"].setValue( imath.V2f( 12.18116, -15.1803007 ) )
__children["YOLO"]["BoxOverlay"]["Crop"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["Text"]["out"] )
__children["YOLO"]["BoxOverlay"]["Crop"]["areaSource"].setValue( 2 )
__children["YOLO"]["BoxOverlay"]["Crop"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 720, 720 ) ) )
__children["YOLO"]["BoxOverlay"]["Crop"]["__uiPosition"].setValue( imath.V2f( 25.3707027, -22.7911301 ) )
__children["YOLO"]["BoxOverlay"]["Dot"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["Loop"]["previous"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot"]["out"], 'noduleLayout:section', 'top' )
__children["YOLO"]["BoxOverlay"]["Dot"]["__uiPosition"].setValue( imath.V2f( 13.6707001, -43.2576714 ) )
__children["YOLO"]["BoxOverlay"]["Dot1"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot1"]["in"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot1"]["out"], 'noduleLayout:section', 'top' )
__children["YOLO"]["BoxOverlay"]["Dot1"]["__uiPosition"].setValue( imath.V2f( 13.6707001, -30.0235405 ) )
__children["YOLO"]["BoxOverlay"]["Dot2"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["BoxIn2"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot2"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["Dot2"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["BoxOverlay"]["Dot2"]["__uiPosition"].setValue( imath.V2f( -25.3474998, -39.9512863 ) )
__children["YOLO"]["BoxOverlay"]["size_x"].setInput( __children["YOLO"]["BoxIn1"]["out"] )
__children["YOLO"]["BoxOverlay"]["seed"].setInput( __children["YOLO"]["seed"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["seed"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["seed"], 'description', 'Seed for the random number generator. Different seeds\nproduce different random numbers. When controlling two\ndifferent properties using the same context variable,\ndifferent seeds may be used to ensure that the generated\nvalues are different.' )
__children["YOLO"]["BoxOverlay"]["Random"]["seedVariable"].setValue( 'loop:index' )
__children["YOLO"]["BoxOverlay"]["Random"]["baseColor"].setValue( imath.Color3f( 1, 0.113772422, 0 ) )
__children["YOLO"]["BoxOverlay"]["Random"]["hue"].setValue( 1.0 )
__children["YOLO"]["BoxOverlay"]["Random"]["__uiPosition"].setValue( imath.V2f( 6.36624146, -16.9701042 ) )
__children["YOLO"]["BoxOverlay"]["lineWidth"].setInput( __children["YOLO"]["lineWidth"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["lineWidth"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["lineWidth"], 'description', 'The width of the outline, measured in pixels.' )
__children["YOLO"]["BoxOverlay"]["shadowOffset"].setInput( __children["YOLO"]["shadowOffset"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["shadowOffset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["shadowOffset"], 'description', 'The offset of the shadow, measured in pixels.' )
__children["YOLO"]["BoxOverlay"]["shadowBlur"].setInput( __children["YOLO"]["shadowBlur"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["shadowBlur"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOverlay"]["shadowBlur"], 'description', 'A blur applied to the shadow, measured in pixels.' )
__children["YOLO"]["FilterBoxes"]["__uiPosition"].setValue( imath.V2f( -7.57890224, -17.6355324 ) )
__children["YOLO"]["FilterBoxes"]["BoxIn1"]["name"].setValue( 'boxes_in' )
__children["YOLO"]["FilterBoxes"]["BoxIn1"]["__in"].setInput( __children["YOLO"]["FilterBoxes"]["boxes_in"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["BoxIn1"]["__in"], 'label', 'boxes' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["BoxIn1"]["__in"], 'noduleLayout:label', 'boxes' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["BoxIn1"]["out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["FilterBoxes"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 9.56174755, 2.60000014 ) )
__children["YOLO"]["FilterBoxes"]["boxes_in"].setInput( __children["YOLO"]["Inference16"]["out"][0] )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes_in"], 'label', 'boxes' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes_in"], 'noduleLayout:label', 'boxes' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes_in"], 'noduleLayout:section', 'top' )
__children["YOLO"]["FilterBoxes"]["boxes2"]["name"].setValue( 'boxes_out' )
__children["YOLO"]["FilterBoxes"]["boxes2"]["in"].setInput( __children["YOLO"]["FilterBoxes"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes2"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes2"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes2"]["__out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes2"]["passThrough"], 'noduleLayout:section', 'top' )
__children["YOLO"]["FilterBoxes"]["boxes2"]["__uiPosition"].setValue( imath.V2f( 10.6999998, -10.8500004 ) )
__children["YOLO"]["FilterBoxes"]["boxes_out"].setInput( __children["YOLO"]["FilterBoxes"]["boxes2"]["__out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes_out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["boxes_out"], 'noduleLayout:section', 'bottom' )
__children["YOLO"]["FilterBoxes"]["Expression"]["__in"]["p0"].setInput( __children["YOLO"]["FilterBoxes"]["BoxIn1"]["out"] )
__children["YOLO"]["FilterBoxes"]["Expression"]["__in"]["p1"].setInput( __children["YOLO"]["FilterBoxes"]["box_threshold"] )
__children["YOLO"]["FilterBoxes"]["Expression"]["__uiPosition"].setValue( imath.V2f( 9.30000019, -4.64999914 ) )
__children["YOLO"]["FilterBoxes"]["box_threshold"].setInput( __children["YOLO"]["box_threshold"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["FilterBoxes"]["box_threshold"], 'nodule:type', '' )
__children["YOLO"]["image"].setInput( __children["ImageReader"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["image"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["image"], 'description', 'image to detect classes from' )
Gaffer.Metadata.registerValue( __children["YOLO"]["image"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["YOLO"]["image"], 'layout:index', 0 )
__children["YOLO"]["BoxIn"]["name"].setValue( 'image' )
__children["YOLO"]["BoxIn"]["__in"].setInput( __children["YOLO"]["image"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["YOLO"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 6.94612122, 31.5207195 ) )
__children["YOLO"]["__uiPosition"].setValue( imath.V2f( -6.56868172, 26.2720814 ) )
Gaffer.Metadata.registerValue( __children["YOLO"]["__uiPosition"], 'layout:section', 'Settings' )
__children["YOLO"]["box_threshold"].setValue( 0.15000000596046448 )
Gaffer.Metadata.registerValue( __children["YOLO"]["box_threshold"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["box_threshold"], 'description', 'min confidence value to filter detections' )
Gaffer.Metadata.registerValue( __children["YOLO"]["box_threshold"], 'layout:section', 'Settings.detection' )
Gaffer.Metadata.registerValue( __children["YOLO"]["box_threshold"], 'layout:index', 2 )
__children["YOLO"]["BoxIn1"]["name"].setValue( 'size' )
__children["YOLO"]["BoxIn1"]["__in"].setInput( __children["YOLO"]["size"] )
__children["YOLO"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 14.2995567, -17.6992321 ) )
__children["YOLO"]["size"].setValue( 36 )
Gaffer.Metadata.registerValue( __children["YOLO"]["size"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["size"], 'description', 'text size' )
Gaffer.Metadata.registerValue( __children["YOLO"]["size"], 'layout:section', 'Settings.Overlay.text' )
Gaffer.Metadata.registerValue( __children["YOLO"]["size"], 'layout:index', 4 )
__children["YOLO"]["seed"].setValue( 80 )
Gaffer.Metadata.registerValue( __children["YOLO"]["seed"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["seed"], 'description', 'Seed for the random number generator. Different seeds\nproduce different random numbers. When controlling two\ndifferent properties using the same context variable,\ndifferent seeds may be used to ensure that the generated\nvalues are different.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["seed"], 'layout:section', 'Settings.Overlay' )
Gaffer.Metadata.registerValue( __children["YOLO"]["seed"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["YOLO"]["lineWidth"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["lineWidth"], 'description', 'The width of the outline, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["lineWidth"], 'layout:section', 'Settings.Overlay.box' )
Gaffer.Metadata.registerValue( __children["YOLO"]["lineWidth"], 'layout:index', 7 )
__children["YOLO"]["shadowOffset"].setValue( imath.V2f( 2, -2 ) )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowOffset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowOffset"], 'description', 'The offset of the shadow, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowOffset"], 'layout:section', 'Settings.Overlay.text' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowOffset"], 'layout:index', 5 )
__children["YOLO"]["shadowBlur"].setValue( 1.0 )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowBlur"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowBlur"], 'description', 'A blur applied to the shadow, measured in pixels.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowBlur"], 'layout:section', 'Settings.Overlay.text' )
Gaffer.Metadata.registerValue( __children["YOLO"]["shadowBlur"], 'layout:index', 6 )
__children["YOLO"]["Dot7"]["in"].setInput( __children["YOLO"]["Dot8"]["out"] )
__children["YOLO"]["Dot7"]["__uiPosition"].setValue( imath.V2f( -24.5717468, -24.7995911 ) )
__children["YOLO"]["Dot8"]["in"].setInput( __children["YOLO"]["ColorSpace11"]["out"] )
__children["YOLO"]["Dot8"]["__uiPosition"].setValue( imath.V2f( -24.5717468, -0.807407498 ) )
__children["YOLO"]["BoxOut"]["in"].setInput( __children["YOLO"]["BoxOverlay"]["out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["YOLO"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 6.75101662, -40.7995911 ) )
__children["YOLO"]["out"].setInput( __children["YOLO"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["YOLO"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["YOLO"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["YOLO"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["YOLO"]["out"], 'layout:index', 1 )
__children["YOLO"]["Crop"]["in"].setInput( __children["YOLO"]["Resize21"]["out"] )
__children["YOLO"]["Crop"]["areaSource"].setValue( 2 )
__children["YOLO"]["Crop"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 640, 640 ) ) )
__children["YOLO"]["Crop"]["__uiPosition"].setValue( imath.V2f( -9.07890224, 12.1886864 ) )
__children["ImageReader"]["fileName"].setValue( '${GAFFER_ROOT}/resources/images/macaw.exr' )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 1.3313179, 37.0041122 ) )
Gaffer.Metadata.registerValue( __children["YOLO_tool"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["YOLO_tool"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["YOLO_tool"]["image"].setInput( __children["ImageReader"]["out"] )
__children["YOLO_tool"]["__uiPosition"].setValue( imath.V2f( 9.13471794, 26.1041164 ) )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__engine"].setValue( 'python' )
__children["YOLO"]["BoxOverlay"]["Expression6"]["__expression"].setValue( 'tensor = parent["__in"]["p0"]\ntensorData = tensor.asData()\nnumDetection = len(tensorData) / tensor.shape()[1] # bs, minx, miny, maxx, maxy, cls, conf\nparent["__out"]["p0"] = numDetection' )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__engine"].setValue( 'python' )
__children["YOLO"]["BoxOverlay"]["Expression7"]["__expression"].setValue( 'import imath\ntensor = parent["__in"]["p3"]\ntensorData = tensor.asData()\ntensorShape = tensor.shape()\nloopIndex = context.get("loop:index", 0 )\n\nbs, x0, y0, x1, y1, cls, conf = tensorData[loopIndex*tensorShape[1]:( loopIndex +1 ) * tensorShape[1] ]\n\n# inference format\nformat = parent["__in"]["p2"]\nwidth = format.width()\nheight = format.height()\n\n# overlay format\nbgFormat = parent["__in"]["p1"]\nbgWidth = bgFormat.width()\nbgHeight = bgFormat.height()\n\n# flip\ny0 = height - y0\ny1 = height - y1\n\nx0 = x0 / width * bgWidth\ny0 = y0 / height * bgHeight\nx1 = x1 / width * bgWidth\ny1 = y1 / height * bgHeight\n\n\nparent["__out"]["p0"] = imath.Box2f( imath.V2f( x0, y0), imath.V2f( x1, y1  ) )\nrc = parent["__in"]["p0"]\ncolor = imath.Color4f(rc.r, rc.g, rc.b, 1)\nparent["__out"]["p1"] = color' )
__children["YOLO"]["BoxOverlay"]["Expression"]["__engine"].setValue( 'python' )
__children["YOLO"]["BoxOverlay"]["Expression"]["__expression"].setValue( '\nyolo_classnames = [\'person\', \'bicycle\', \'car\', \'motorcycle\', \'airplane\', \'bus\', \'train\', \'truck\', \'boat\', \'traffic light\',\n         \'fire hydrant\', \'stop sign\', \'parking meter\', \'bench\', \'bird\', \'cat\', \'dog\', \'horse\', \'sheep\', \'cow\',\n         \'elephant\', \'bear\', \'zebra\', \'giraffe\', \'backpack\', \'umbrella\', \'handbag\', \'tie\', \'suitcase\', \'frisbee\',\n         \'skis\', \'snowboard\', \'sports ball\', \'kite\', \'baseball bat\', \'baseball glove\', \'skateboard\', \'surfboard\',\n         \'tennis racket\', \'bottle\', \'wine glass\', \'cup\', \'fork\', \'knife\', \'spoon\', \'bowl\', \'banana\', \'apple\',\n         \'sandwich\', \'orange\', \'broccoli\', \'carrot\', \'hot dog\', \'pizza\', \'donut\', \'cake\', \'chair\', \'couch\',\n         \'potted plant\', \'bed\', \'dining table\', \'toilet\', \'tv\', \'laptop\', \'mouse\', \'remote\', \'keyboard\', \'cell phone\',\n         \'microwave\', \'oven\', \'toaster\', \'sink\', \'refrigerator\', \'book\', \'clock\', \'vase\', \'scissors\', \'teddy bear\',\n         \'hair drier\', \'toothbrush\']\n\ntensor = parent["__in"]["p1"]\ntensorShape = tensor.shape()\ntensorData = tensor.asData()\n\nloopIndex = context.get("loop:index", 0 )\n\nbs, x0, y0, x1, y1, cls, conf = tensorData[loopIndex*tensorShape[1]:( loopIndex +1 ) * tensorShape[1] ]\nclassName = yolo_classnames[int(cls)]\n\nparent["__out"]["p1"] = f"{className} : {conf:2f}"\nrc = parent["__in"]["p0"]\ncolor = imath.Color4f(rc.r, rc.g, rc.b, 1)\nparent["__out"]["p0"] = color' )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__engine"].setValue( 'python' )
__children["YOLO"]["BoxOverlay"]["Expression8"]["__expression"].setValue( 'rectArea  = parent["__in"]["p0"]\n\nx0 = rectArea.min().x\nx1 = rectArea.max().x\ny0 = rectArea.min().y\ny1 = rectArea.max().y\n\nparent["__out"]["p0"] = imath.Box2i( imath.V2i(x0, y0), imath.V2i(x1, y0 + parent["__in"]["p1"] * 1.5) )\n' )
__children["YOLO"]["FilterBoxes"]["Expression"]["__engine"].setValue( 'python' )
__children["YOLO"]["FilterBoxes"]["Expression"]["__expression"].setValue( 'import GafferML\n\n# inputs\nbox_threshold = parent["__in"]["p1"]\n\nboxes = parent["__in"]["p0"].asData()\nboxesShape = parent["__in"]["p0"].shape()\nboxShape = boxesShape[1]\n\nfilteredBoxes = []\nfilteredShape = [boxShape]\n\nfor predNum in range( boxesShape[0] ):\n\tcurrentBox = boxes[predNum*boxShape:predNum*boxShape + boxShape]\n\tif currentBox[-1] > box_threshold:\n\t\tfilteredBoxes.append(currentBox)\n\t\t\nfilteredShape.insert(0, len(filteredBoxes))\nfilteredBoxesData = IECore.FloatVectorData([ item for box in filteredBoxes for item in box ])\n\nparent["__out"]["p0"] = GafferML.Tensor(filteredBoxesData, filteredShape)' )


del __children
